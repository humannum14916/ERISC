
meta header userspace;

struct changePointers {
  array[char] toPath,
  array[char] param
};

define array[char] toPrint = 256;

define array[char] changePath
  = "/programs/shell";

define array[char] changeParam = 0;

define changePointers returnToShell
  = {toPath: changePath, param: changeParam}; 

function stackless void MAIN(){
  //load the string to be echoed
  asm "!defU kCall 4 toPrint";

  //print loop
  define char curChar = null;
  for(define int i=0;i<toPrint->length;set i=i+1){
    //get current character
    set curChar = toPrint[i];

    //null check
    if(curChar == 0){
      //break
      set i = toPrint->length;
    } else {
      //print it
      asm "!defU kCall 0 MAIN.curChar";
    };
  };

  //add a newline
  asm "!defU kCall 0 10";

  //return to the shell
  asm "!defU kCall 3 returnToShell";
};

function stackless void INTERRUPT(){
  //ignore character input
  asm "!defU kCall 1 0";
};
