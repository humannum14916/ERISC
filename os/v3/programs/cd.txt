
meta header userspace;

struct changePointers {
  array[char] toPath,
  array[char] param
};

define array[char] changePath
  = "/Programs/shell";

define array[char] changeParam = 0;

define changePointers returnToShell
  = {toPath: changePath, param: changeParam}; 

define array[char] cwd = 256;
define array[char] param = 256;

function stackless void MAIN(){
  //load the CWD and parameter
  asm "!defU kCall 5 cwd";
  asm "!defU kCall 4 param";
  
  //find the end of the CWD
  define int cwdEnd = 0;
  while(!(cwd[cwdEnd] == null)){
    cwdEnd = cwdEnd + 1;
  };

  //check for .
  if(param[0] == "." & param[1] == null){
    //is ., got up one directory
    while(!(cwd[cwdEnd] == "/")){
      cwdEnd = cwdEnd - 1;
    };
    if(cwdEnd == 0){
      cwdEnd = cwdEnd + 1;
    };
    cwd[cwdEnd] = null;
  } else {
    //not ., add param to CWD
    if(!(cwdEnd == 1)){
      //not in root dir, add / to CWD
      cwd[cwdEnd] = "/";
      cwdEnd = cwdEnd + 1;
    };
    //add param to CWD
    define int paramIndex = 0;
    while(!(param[paramIndex] == null)){
      cwd[cwdEnd+paramIndex] = param[paramIndex];
      paramIndex = paramIndex + 1;
    };
  };

  //set CWD
  asm "!defU kCall 6 cwd";

  //return to the shell
  asm "!defU kCall 3 returnToShell";
};

function stackless void INTERRUPT(){
  //ignore character input
  asm "!defU kCall 1 0";
};
